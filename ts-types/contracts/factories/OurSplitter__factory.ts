/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurSplitter } from "../OurSplitter";

export class OurSplitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OurSplitter> {
    return super.deploy(overrides || {}) as Promise<OurSplitter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OurSplitter {
    return super.attach(address) as OurSplitter;
  }
  connect(signer: Signer): OurSplitter__factory {
    return super.connect(signer) as OurSplitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurSplitter {
    return new Contract(address, _abi, signerOrProvider) as OurSplitter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWindow",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsAvailable",
        type: "uint256",
      },
    ],
    name: "WindowIncremented",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "scaledPercentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledPercent",
        type: "uint256",
      },
    ],
    name: "scaleAmountByPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b04806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634f0e0ef3116100665780634f0e0ef3146100f957806381e580d31461012c5780638ffb5c971461013f578063ba0bafb414610152578063d2ef07951461015b57600080fd5b80631e7df9d3146100a35780632e7ba6ef146100b85780632eb4a7ab146100cb578063338b1d31146100e75780633f26479e146100ef575b600080fd5b6100b66100b1366004610904565b61017e565b005b6100b66100c63660046109bf565b610294565b6100d460005481565b6040519081526020015b60405180910390f35b6100b6610403565b6100d4620f424081565b61011473c778417e063141139fce010982780140aa0cd5ab81565b6040516001600160a01b0390911681526020016100de565b6100d461013a36600461097c565b6104fa565b6100d461014d366004610a25565b61051b565b6100d460015481565b61016e610169366004610994565b610546565b60405190151581526020016100de565b6101c682828080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492506101c1915088905087610571565b6105b9565b6102075760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064015b60405180910390fd5b6000805b6001548110156102815761021f8187610546565b61026f5761022d8187610676565b6102626004828154811061025157634e487b7160e01b600052603260045260246000fd5b90600052602060002001548661051b565b61026c9083610a46565b91505b8061027981610a9d565b91505061020b565b5061028c85826106a9565b505050505050565b84600154116102e55760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f7760448201526064016101fe565b6102ef8585610546565b1561034d5760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d65642074686520676976656044820152676e2077696e646f7760c01b60648201526084016101fe565b6103578585610676565b61039a82828080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492506101c1915088905087610571565b6103d65760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064016101fe565b61028c846103fe6004888154811061025157634e487b7160e01b600052603260045260246000fd5b6106a9565b60006001546000141561041757504761041c565b506006545b60006006558061046e5760405162461bcd60e51b815260206004820152601e60248201527f4e6f206164646974696f6e616c2066756e647320666f722077696e646f77000060448201526064016101fe565b600480546001818101835560009283527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018390558054909182916104b6908390610a46565b909155505060015460408051918252602082018390527ff0840b82b46c1dc7df62cae652baa1b5588ce37b6a1236ed1dcf4caf34d738ac910160405180910390a150565b6004818154811061050a57600080fd5b600091825260209091200154905081565b600061052b620f42406064610a7e565b6105358385610a7e565b61053f9190610a5e565b9392505050565b600060056000610556858561080b565b815260208101919091526040016000205460ff169392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600081815b855181101561066b5760008682815181106105e957634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161062b576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610658565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061066381610a9d565b9150506105be565b509092149392505050565b600160056000610686858561080b565b81526020810191909152604001600020805460ff19169115159190911790555050565b60006106b5838361083b565b9050806107bb5773c778417e063141139fce010982780140aa0cd5ab6001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561070b57600080fd5b505af115801561071f573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b03871660048201526024810186905273c778417e063141139fce010982780140aa0cd5ab935063a9059cbb92506044019050602060405180830381600087803b15801561078157600080fd5b505af1158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b9919061095c565b505b604080516001600160a01b0385168152602081018490528215158183015290517fdbd5389f52533f4cbd998e752125a5a4eaa0b813b399ad15f775ec0e8438620d9181900360600190a192915050565b6000828260405160200161059b92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d806000811461088e576040519150601f19603f3d011682016040523d82523d6000602084013e610893565b606091505b509095945050505050565b80356001600160a01b03811681146108b557600080fd5b919050565b60008083601f8401126108cb578182fd5b50813567ffffffffffffffff8111156108e2578182fd5b6020830191508360208260051b85010111156108fd57600080fd5b9250929050565b60008060008060608587031215610919578384fd5b6109228561089e565b935060208501359250604085013567ffffffffffffffff811115610944578283fd5b610950878288016108ba565b95989497509550505050565b60006020828403121561096d578081fd5b8151801515811461053f578182fd5b60006020828403121561098d578081fd5b5035919050565b600080604083850312156109a6578182fd5b823591506109b66020840161089e565b90509250929050565b6000806000806000608086880312156109d6578081fd5b853594506109e66020870161089e565b935060408601359250606086013567ffffffffffffffff811115610a08578182fd5b610a14888289016108ba565b969995985093965092949392505050565b60008060408385031215610a37578182fd5b50508035926020909101359150565b60008219821115610a5957610a59610ab8565b500190565b600082610a7957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610a9857610a98610ab8565b500290565b6000600019821415610ab157610ab1610ab8565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201e75e60819b6cbfbf5499b744c00675d0ac6a8da03b2f144f0cb8bf599bc573964736f6c63430008040033";
