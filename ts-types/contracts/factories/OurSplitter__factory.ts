/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurSplitter } from "../OurSplitter";

export class OurSplitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OurSplitter> {
    return super.deploy(overrides || {}) as Promise<OurSplitter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OurSplitter {
    return super.attach(address) as OurSplitter;
  }
  connect(signer: Signer): OurSplitter__factory {
    return super.connect(signer) as OurSplitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurSplitter {
    return new Contract(address, _abi, signerOrProvider) as OurSplitter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWindow",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsAvailable",
        type: "uint256",
      },
    ],
    name: "WindowIncremented",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "scaledPercentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "incrementWindowThenClaimForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledPercent",
        type: "uint256",
      },
    ],
    name: "scaleAmountByPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bdd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633f26479e116100715780633f26479e1461010d5780634f0e0ef31461011757806381e580d31461014a5780638ffb5c971461015d578063ba0bafb414610170578063d2ef07951461017957600080fd5b80631b9757f7146100ae5780631e7df9d3146100c35780632e7ba6ef146100d65780632eb4a7ab146100e9578063338b1d3114610105575b600080fd5b6100c16100bc3660046109b6565b61019c565b005b6100c16100d13660046109b6565b61029e565b6100c16100e4366004610a71565b610366565b6100f260005481565b6040519081526020015b60405180910390f35b6100c16104b5565b6100f2620f424081565b61013273c778417e063141139fce010982780140aa0cd5ab81565b6040516001600160a01b0390911681526020016100fc565b6100f2610158366004610a2e565b6105ac565b6100f261016b366004610ad7565b6105cd565b6100f260015481565b61018c610187366004610a46565b6105f8565b60405190151581526020016100fc565b6101e482828080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492506101df915088905087610623565b61066b565b6102095760405162461bcd60e51b815260040161020090610af8565b60405180910390fd5b6102116104b5565b6000805b60015481101561028b5761022981876105f8565b610279576102378187610728565b61026c6004828154811061025b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154866105cd565b6102769083610b1f565b91505b8061028381610b76565b915050610215565b50610296858261075b565b505050505050565b6102e182828080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492506101df915088905087610623565b6102fd5760405162461bcd60e51b815260040161020090610af8565b6000805b60015481101561028b5761031581876105f8565b610354576103238187610728565b6103476004828154811061025b57634e487b7160e01b600052603260045260246000fd5b6103519083610b1f565b91505b8061035e81610b76565b915050610301565b84600154116103b75760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f776044820152606401610200565b6103c185856105f8565b1561041f5760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d65642074686520676976656044820152676e2077696e646f7760c01b6064820152608401610200565b6104298585610728565b61046c82828080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492506101df915088905087610623565b6104885760405162461bcd60e51b815260040161020090610af8565b610296846104b06004888154811061025b57634e487b7160e01b600052603260045260246000fd5b61075b565b6000600154600014156104c95750476104ce565b506006545b6000600655806105205760405162461bcd60e51b815260206004820152601e60248201527f4e6f206164646974696f6e616c2066756e647320666f722077696e646f7700006044820152606401610200565b600480546001818101835560009283527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101839055805490918291610568908390610b1f565b909155505060015460408051918252602082018390527ff0840b82b46c1dc7df62cae652baa1b5588ce37b6a1236ed1dcf4caf34d738ac910160405180910390a150565b600481815481106105bc57600080fd5b600091825260209091200154905081565b60006105dd620f42406064610b57565b6105e78385610b57565b6105f19190610b37565b9392505050565b60006005600061060885856108bd565b815260208101919091526040016000205460ff169392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600081815b855181101561071d57600086828151811061069b57634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116106dd57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061070a565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061071581610b76565b915050610670565b509092149392505050565b60016005600061073885856108bd565b81526020810191909152604001600020805460ff19169115159190911790555050565b600061076783836108ed565b90508061086d5773c778417e063141139fce010982780140aa0cd5ab6001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107bd57600080fd5b505af11580156107d1573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b03871660048201526024810186905273c778417e063141139fce010982780140aa0cd5ab935063a9059cbb92506044019050602060405180830381600087803b15801561083357600080fd5b505af1158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190610a0e565b505b604080516001600160a01b0385168152602081018490528215158183015290517fdbd5389f52533f4cbd998e752125a5a4eaa0b813b399ad15f775ec0e8438620d9181900360600190a192915050565b6000828260405160200161064d92919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d8060008114610940576040519150601f19603f3d011682016040523d82523d6000602084013e610945565b606091505b509095945050505050565b80356001600160a01b038116811461096757600080fd5b919050565b60008083601f84011261097d578182fd5b50813567ffffffffffffffff811115610994578182fd5b6020830191508360208260051b85010111156109af57600080fd5b9250929050565b600080600080606085870312156109cb578384fd5b6109d485610950565b935060208501359250604085013567ffffffffffffffff8111156109f6578283fd5b610a028782880161096c565b95989497509550505050565b600060208284031215610a1f578081fd5b815180151581146105f1578182fd5b600060208284031215610a3f578081fd5b5035919050565b60008060408385031215610a58578182fd5b82359150610a6860208401610950565b90509250929050565b600080600080600060808688031215610a88578081fd5b85359450610a9860208701610950565b935060408601359250606086013567ffffffffffffffff811115610aba578182fd5b610ac68882890161096c565b969995985093965092949392505050565b60008060408385031215610ae9578182fd5b50508035926020909101359150565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b60008219821115610b3257610b32610b91565b500190565b600082610b5257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b7157610b71610b91565b500290565b6000600019821415610b8a57610b8a610b91565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122039e41872ae334e011e7040461c7f4a0924592c0cafffd6d0f2e5e17fa951f90c64736f6c63430008040033";
