/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurSplitter } from "../OurSplitter";

export class OurSplitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OurSplitter> {
    return super.deploy(overrides || {}) as Promise<OurSplitter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OurSplitter {
    return super.attach(address) as OurSplitter;
  }
  connect(signer: Signer): OurSplitter__factory {
    return super.connect(signer) as OurSplitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurSplitter {
    return new Contract(address, _abi, signerOrProvider) as OurSplitter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ETHReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "MassTransferERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWindow",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsAvailable",
        type: "uint256",
      },
    ],
    name: "WindowIncremented",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "scaledPercentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimETHForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "incrementThenClaimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledPercent",
        type: "uint256",
      },
    ],
    name: "scaleAmountByPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d12806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638ffb5c9711610081578063c3a3d9841161005b578063c3a3d98414610180578063d2ef079514610193578063debb73fe146101b657600080fd5b80638ffb5c9714610151578063a303c8a114610164578063ba0bafb41461017757600080fd5b80633f26479e116100b25780633f26479e146100f45780633fc8cef3146100fe57806381e580d31461013e57600080fd5b80632eb4a7ab146100ce578063338b1d31146100ea575b600080fd5b6100d760005481565b6040519081526020015b60405180910390f35b6100f26101c9565b005b6100d7620f424081565b61011973c778417e063141139fce010982780140aa0cd5ab81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e1565b6100d761014c366004610b8a565b6102c5565b6100d761015f366004610c33565b6102e6565b6100f2610172366004610b12565b610311565b6100d760015481565b6100f261018e366004610b12565b610432565b6101a66101a1366004610ba2565b61044c565b60405190151581526020016100e1565b6100f26101c4366004610bcd565b610477565b6000600154600014156101dd5750476101e2565b506005545b6000600555806102395760405162461bcd60e51b815260206004820152601e60248201527f4e6f206164646974696f6e616c2066756e647320666f722077696e646f77000060448201526064015b60405180910390fd5b600380546001818101835560009283527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101839055805490918291610281908390610c54565b909155505060015460408051918252602082018390527ff0840b82b46c1dc7df62cae652baa1b5588ce37b6a1236ed1dcf4caf34d738ac910160405180910390a150565b600381815481106102d557600080fd5b600091825260209091200154905081565b60006102f6620f42406064610c8c565b6103008385610c8c565b61030a9190610c6c565b9392505050565b610359828280806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054925061035491508890508761060b565b610653565b6103a55760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610230565b6000805b60015481101561041f576103bd818761044c565b61040d576103cb8187610710565b610400600382815481106103ef57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154866102e6565b61040a9083610c54565b91505b8061041781610cab565b9150506103a9565b5061042a8582610761565b505050505050565b61043a6101c9565b61044684848484610907565b50505050565b60006004600061045c85856109ff565b815260208101919091526040016000205460ff169392505050565b84600154116104c85760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f776044820152606401610230565b6104d2858561044c565b156105455760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d656420746865206769766560448201527f6e2077696e646f770000000000000000000000000000000000000000000000006064820152608401610230565b61054f8585610710565b610592828280806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054925061035491508890508761060b565b6105de5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610230565b61042a84610606600388815481106103ef57634e487b7160e01b600052603260045260246000fd5b610761565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600081815b855181101561070557600086828151811061068357634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116106c55760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506106f2565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806106fd81610cab565b915050610658565b509092149392505050565b60016004600061072085856109ff565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b600061076d8383610a2f565b9050806108aa5773c778417e063141139fce010982780140aa0cd5ab73ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024810186905273c778417e063141139fce010982780140aa0cd5ab935063a9059cbb92506044019050602060405180830381600087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a49190610b6a565b50600190505b6040805173ffffffffffffffffffffffffffffffffffffffff85168152602081018490528215158183015290517fdbd5389f52533f4cbd998e752125a5a4eaa0b813b399ad15f775ec0e8438620d9181900360600190a192915050565b61094a828280806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054925061035491508890508761060b565b6109965760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610230565b6000805b60015481101561041f576109ae818761044c565b6109ed576109bc8187610710565b6109e0600382815481106103ef57634e487b7160e01b600052603260045260246000fd5b6109ea9083610c54565b91505b806109f781610cab565b91505061099a565b6000828260405160200161063592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051600060405180830381858888f193505050503d8060008114610a8f576040519150601f19603f3d011682016040523d82523d6000602084013e610a94565b606091505b509095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ac357600080fd5b919050565b60008083601f840112610ad9578182fd5b50813567ffffffffffffffff811115610af0578182fd5b6020830191508360208260051b8501011115610b0b57600080fd5b9250929050565b60008060008060608587031215610b27578384fd5b610b3085610a9f565b935060208501359250604085013567ffffffffffffffff811115610b52578283fd5b610b5e87828801610ac8565b95989497509550505050565b600060208284031215610b7b578081fd5b8151801515811461030a578182fd5b600060208284031215610b9b578081fd5b5035919050565b60008060408385031215610bb4578182fd5b82359150610bc460208401610a9f565b90509250929050565b600080600080600060808688031215610be4578081fd5b85359450610bf460208701610a9f565b935060408601359250606086013567ffffffffffffffff811115610c16578182fd5b610c2288828901610ac8565b969995985093965092949392505050565b60008060408385031215610c45578182fd5b50508035926020909101359150565b60008219821115610c6757610c67610cc6565b500190565b600082610c8757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ca657610ca6610cc6565b500290565b6000600019821415610cbf57610cbf610cc6565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122058b950254408507042173fc236bdc70584b7a77f9ab2bfddcc18321122c4e30764736f6c63430008040033";
