/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurManagement } from "../OurManagement";

export class OurManagement__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OurManagement> {
    return super.deploy(overrides || {}) as Promise<OurManagement>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OurManagement {
    return super.attach(address) as OurManagement;
  }
  connect(signer: Signer): OurManagement__factory {
    return super.connect(signer) as OurManagement__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurManagement {
    return new Contract(address, _abi, signerOrProvider) as OurManagement;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
    ],
    name: "ProxySetup",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovedOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "swapOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632f54bf6e1461005c5780637065cb4814610084578063a0e67e2b14610099578063e318b52b146100ae578063fbe5ce0a146100c1575b600080fd5b61006f61006a36600461068d565b6100d4565b60405190151581526020015b60405180910390f35b61009761009236600461068d565b61010f565b005b6100a1610230565b60405161007b919061071b565b6100976100bc3660046106d9565b61033c565b6100976100cf3660046106a7565b610568565b60006001600160a01b03821660011480159061010957506001600160a01b038281166000908152602081905260409020541615155b92915050565b6101183361065e565b506001600160a01b0381161580159061013b57506001600160a01b038116600114155b801561015057506001600160a01b0381163014155b61015957600080fd5b6001600160a01b03818116600090815260208190526040902054161561017e57600080fd5b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03848116808552604085208054929093166001600160a01b031992831617909255600180855283549091169091179091558054916101ec8361077f565b90915550506040516001600160a01b03821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a150565b6060600060015467ffffffffffffffff81111561025d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610286578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54919250906001600160a01b03165b6001600160a01b03811660011461033457808383815181106102f557634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152918116600090815291829052604090912054168161032c8161077f565b9250506102c3565b509092915050565b6103453361065e565b506001600160a01b0381161580159061036857506001600160a01b038116600114155b801561037d57506001600160a01b0381163014155b6103b25760405162461bcd60e51b81526020600482015260016024820152601960f91b60448201526064015b60405180910390fd5b6001600160a01b0381811660009081526020819052604090205416156103fe5760405162461bcd60e51b81526020600482015260016024820152603360f81b60448201526064016103a9565b6001600160a01b0382161580159061042057506001600160a01b038216600114155b6104505760405162461bcd60e51b81526020600482015260016024820152600d60fa1b60448201526064016103a9565b6001600160a01b038381166000908152602081905260409020548116908316146104a05760405162461bcd60e51b81526020600482015260016024820152603560f81b60448201526064016103a9565b6001600160a01b03828116600081815260208181526040808320805487871680865283862080549289166001600160a01b0319938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a16040516001600160a01b03821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b6105713361065e565b506001600160a01b0381161580159061059457506001600160a01b038116600114155b61059d57600080fd5b6001600160a01b038281166000908152602081905260409020548116908216146105c657600080fd5b6001600160a01b03818116600081815260208190526040808220805487861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600180549161061983610768565b90915550506040516001600160a01b03821681527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf9060200160405180910390a15050565b60008061066a836100d4565b9392505050565b80356001600160a01b038116811461068857600080fd5b919050565b60006020828403121561069e578081fd5b61066a82610671565b600080604083850312156106b9578081fd5b6106c283610671565b91506106d060208401610671565b90509250929050565b6000806000606084860312156106ed578081fd5b6106f684610671565b925061070460208501610671565b915061071260408501610671565b90509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561075c5783516001600160a01b031683529284019291840191600101610737565b50909695505050505050565b6000816107775761077761079a565b506000190190565b60006000198214156107935761079361079a565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202e45c77574ff95cf002fbd3b5900d7c0bdda5b8480826b8b3ce0b7ce513a5aee64736f6c63430008040033";
