/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurProxy } from "../OurProxy";

export class OurProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OurProxy> {
    return super.deploy(overrides || {}) as Promise<OurProxy>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OurProxy {
    return super.attach(address) as OurProxy;
  }
  connect(signer: Signer): OurProxy__factory {
    return super.connect(signer) as OurProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurProxy {
    return new Contract(address, _abi, signerOrProvider) as OurProxy;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ETHReceived",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceForWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pylon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336001600160a01b031663468477946040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561004c57600080fd5b505af1158015610060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100849190610125565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b0316632eb4a7ab6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156100e557600080fd5b505af11580156100f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011d9190610153565b60005561016b565b600060208284031215610136578081fd5b81516001600160a01b038116811461014c578182fd5b9392505050565b600060208284031215610164578081fd5b5051919050565b61027c8061017a6000396000f3fe60806040526004361061005e5760003560e01c80634684779411610043578063468477941461016f57806381e580d31461019a578063ba0bafb4146101ba576100b1565b80632eb4a7ab146100f95780633fc8cef314610122576100b1565b366100b15734600560008282546100759190610209565b909155505060405134815233907fbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a9060200160405180910390a2005b60006100d260025473ffffffffffffffffffffffffffffffffffffffff1690565b905060405136600082376000803683855af43d806000843e8180156100f5578184f35b8184fd5b34801561010557600080fd5b5061010f60005481565b6040519081526020015b60405180910390f35b34801561012e57600080fd5b5061014a73c778417e063141139fce010982780140aa0cd5ab81565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b34801561017b57600080fd5b5060025473ffffffffffffffffffffffffffffffffffffffff1661014a565b3480156101a657600080fd5b5061010f6101b53660046101f1565b6101d0565b3480156101c657600080fd5b5061010f60015481565b600381815481106101e057600080fd5b600091825260209091200154905081565b600060208284031215610202578081fd5b5035919050565b60008219821115610241577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea26469706673582212203eeaed2d6403c5d45dc7c87327679e7558d4f2660b1635240ff0e0f10f0d436e64736f6c63430008040033";
