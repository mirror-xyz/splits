/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurFactory } from "../OurFactory";

export class OurFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(pylon_: string, overrides?: Overrides): Promise<OurFactory> {
    return super.deploy(pylon_, overrides || {}) as Promise<OurFactory>;
  }
  getDeployTransaction(
    pylon_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(pylon_, overrides || {});
  }
  attach(address: string): OurFactory {
    return super.attach(address) as OurFactory;
  }
  connect(signer: Signer): OurFactory__factory {
    return super.connect(signer) as OurFactory__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurFactory {
    return new Contract(address, _abi, signerOrProvider) as OurFactory;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pylon_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ourProxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxyCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "splitRecipients",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nickname",
        type: "string",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "splitRecipients_",
        type: "string",
      },
      {
        internalType: "string",
        name: "nickname_",
        type: "string",
      },
    ],
    name: "createSplit",
    outputs: [
      {
        internalType: "address",
        name: "ourProxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pylon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161084a38038061084a83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6107bb61008f6000396000609f01526107bb6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320705e37146100465780632eb4a7ab14610083578063468477941461009a575b600080fd5b6100596100543660046101d5565b6100c1565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008c60005481565b60405190815260200161007a565b6100597f000000000000000000000000000000000000000000000000000000000000000081565b6000868155604080516020810189905201604051602081830303815290604052805190602001206040516100f490610181565b8190604051809103906000f5905080158015610114573d6000803e3d6000fd5b509050600080557feec421a8d31389bc8d249c1dcf88e2add7082dbb5bf1bff25378b6c44f415e7b81338787878760405161015496959493929190610306565b60405180910390a16000806000885160208a016000865af1141561017757600080fd5b9695505050505050565b6103f68061039083390190565b60008083601f84011261019f578081fd5b50813567ffffffffffffffff8111156101b6578182fd5b6020830191508360208285010111156101ce57600080fd5b9250929050565b600080600080600080608087890312156101ed578182fd5b86359550602087013567ffffffffffffffff8082111561020b578384fd5b818901915089601f83011261021e578384fd5b81358181111561023057610230610360565b604051601f8201601f19908116603f0116810190838211818310171561025857610258610360565b816040528281528c6020848701011115610270578687fd5b826020860160208301379182016020018690525096506040890135915080821115610299578384fd5b6102a58a838b0161018e565b909650945060608901359150808211156102bd578384fd5b506102ca89828a0161018e565b979a9699509497509295939492505050565b8183528181602085013750600080602083850101526020601f19601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352808816602084015250608060408301526103406080830186886102dc565b82810360608401526103538185876102dc565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe608060405234801561001057600080fd5b50336001600160a01b031663468477946040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561004c57600080fd5b505af1158015610060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100849190610125565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b0316632eb4a7ab6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156100e557600080fd5b505af11580156100f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011d9190610153565b60005561016b565b600060208284031215610136578081fd5b81516001600160a01b038116811461014c578182fd5b9392505050565b600060208284031215610164578081fd5b5051919050565b61027c8061017a6000396000f3fe60806040526004361061005e5760003560e01c80634684779411610043578063468477941461016f57806381e580d31461019a578063ba0bafb4146101ba576100b1565b80632eb4a7ab146100f95780633fc8cef314610122576100b1565b366100b15734600560008282546100759190610209565b909155505060405134815233907fbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a9060200160405180910390a2005b60006100d260025473ffffffffffffffffffffffffffffffffffffffff1690565b905060405136600082376000803683855af43d806000843e8180156100f5578184f35b8184fd5b34801561010557600080fd5b5061010f60005481565b6040519081526020015b60405180910390f35b34801561012e57600080fd5b5061014a73c778417e063141139fce010982780140aa0cd5ab81565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b34801561017b57600080fd5b5060025473ffffffffffffffffffffffffffffffffffffffff1661014a565b3480156101a657600080fd5b5061010f6101b53660046101f1565b6101d0565b3480156101c657600080fd5b5061010f60015481565b600381815481106101e057600080fd5b600091825260209091200154905081565b600060208284031215610202578081fd5b5035919050565b60008219821115610241577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea26469706673582212203eeaed2d6403c5d45dc7c87327679e7558d4f2660b1635240ff0e0f10f0d436e64736f6c63430008040033a26469706673582212203de1cebb3ec2b8ec68efeb5fb7e5af2e3ec6a146dfc44757c9a92d2ced6258f764736f6c63430008040033";
