/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OurFactory } from "../OurFactory";

export class OurFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(pylon_: string, overrides?: Overrides): Promise<OurFactory> {
    return super.deploy(pylon_, overrides || {}) as Promise<OurFactory>;
  }
  getDeployTransaction(
    pylon_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(pylon_, overrides || {});
  }
  attach(address: string): OurFactory {
    return super.attach(address) as OurFactory;
  }
  connect(signer: Signer): OurFactory__factory {
    return super.connect(signer) as OurFactory__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OurFactory {
    return new Contract(address, _abi, signerOrProvider) as OurFactory;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pylon_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ourProxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxyOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "splitRecipients",
        type: "string",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "splitRecipients_",
        type: "string",
      },
    ],
    name: "createSplit",
    outputs: [
      {
        internalType: "address",
        name: "ourProxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pylon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161082338038061082383398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61079461008f6000396000606701526107946000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632eb4a7ab1461004657806346847794146100625780635cd6fc40146100a1575b600080fd5b61004f60005481565b6040519081526020015b60405180910390f35b6100897f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610059565b6100896100af36600461027a565b6000838155604080516020810186905201604051602081830303815290604052805190602001206040516100e2906101f7565b8190604051809103906000f5905080158015610102573d6000803e3d6000fd5b5090506000805560008060008551602087016000865af1141561012457600080fd5b6040513360248201526001600160a01b0382169060440160408051601f198184030181529181526020820180516001600160e01b0316635df75c0360e01b17905251610170919061030d565b6000604051808303816000865af19150503d80600081146101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b606091505b5050507ff6d2909e43c0a43861d485afb2afe249c4b52ab0ab1c7b825f63208b093246808133846040516101e893929190610329565b60405180910390a19392505050565b6103a2806103bd83390190565b600067ffffffffffffffff8084111561021f5761021f6103a6565b604051601f8501601f19908116603f01168101908282118183101715610247576102476103a6565b8160405280935085815286868601111561026057600080fd5b858560208301376000602087830101525050509392505050565b60008060006060848603121561028e578283fd5b83359250602084013567ffffffffffffffff808211156102ac578384fd5b818601915086601f8301126102bf578384fd5b6102ce87833560208501610204565b935060408601359150808211156102e3578283fd5b508401601f810186136102f4578182fd5b61030386823560208401610204565b9150509250925092565b6000825161031f818460208701610376565b9190910192915050565b600060018060a01b038086168352808516602084015250606060408301528251806060840152610360816080850160208701610376565b601f01601f191691909101608001949350505050565b60005b83811015610391578181015183820152602001610379565b838111156103a0576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfe608060405234801561001057600080fd5b50336001600160a01b031663468477946040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561004c57600080fd5b505af1158015610060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100849190610125565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b0316632eb4a7ab6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156100e557600080fd5b505af11580156100f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011d9190610153565b60005561016b565b600060208284031215610136578081fd5b81516001600160a01b038116811461014c578182fd5b9392505050565b600060208284031215610164578081fd5b5051919050565b6102288061017a6000396000f3fe60806040526004361061004e5760003560e01c80632eb4a7ab146100dc57806346847794146101055780634f0e0ef31461013757806381e580d31461015f578063ba0bafb41461017f576100a1565b366100a15760405134815233907fbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a9060200160405180910390a2346005600082825461009a91906101ce565b9091555050005b60006100b56002546001600160a01b031690565b905060405136600082376000803683855af43d806000843e8180156100d8578184f35b8184fd5b3480156100e857600080fd5b506100f260005481565b6040519081526020015b60405180910390f35b34801561011157600080fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016100fc565b34801561014357600080fd5b5061011f73c778417e063141139fce010982780140aa0cd5ab81565b34801561016b57600080fd5b506100f261017a3660046101b6565b610195565b34801561018b57600080fd5b506100f260015481565b600381815481106101a557600080fd5b600091825260209091200154905081565b6000602082840312156101c7578081fd5b5035919050565b600082198211156101ed57634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220e56bc90ea39bb51d9ff4dcf5aa93e051c125e4aaddaa209fab407fec3bd626f464736f6c63430008040033a264697066735822122063aa3603f95bcf04f18fd1fbadefbc2c6e86d541c9fd1ea0502d35fe3c90791664736f6c63430008040033";
